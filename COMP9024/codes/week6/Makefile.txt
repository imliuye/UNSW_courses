CC = gcc
CCFLAGS = -Wall -Werror -std=c11

1: graph-ArrayofEdges.o graphtester.o
	$(CC) $(CCFLAGS) -o test graph-ArrayofEdges.o graphtester.o

2: gr graphtester.o
	$(CC) $(CCFLAGS) -o test gr graphtester.o

3: graph-AdjacencyLists.o list.o graphtester.o
	$(CC) $(CCFLAGS) -o test graph-AdjacencyLists.o list.o graphtester.o

dfs: dfsRecursive.o Graph.o
	$(CC) $(CCFLAGS) -o dfs Graph.o dfsRecursive.o

bfs: bfsQueue.o Graph.o queue.o
	$(CC) $(CCFLAGS) -o bfs Graph.o queue.o bfsQueue.o

graphtester.o: graphtester.c Graph.h
	$(CC) $(CCFLAGS) -c graphtester.c

dfsRecursive.o: dfsRecursive.c Graph.h
	$(CC) $(CCFLAGS) -c dfsRecursive.c

bfsQueue.o: bfsQueue.c Graph.h queue.h
	$(CC) $(CCFLAGS) -c bfsQueue.c

graph-ArrayofEdges.o: graph-ArrayofEdges.c Graph.h
	$(CC) $(CCFLAGS) -c graph-ArrayofEdges.c

gr: Graph.c Graph.h
	$(CC) $(CCFLAGS) -c Graph.c

graph-AdjacencyLists.o: graph-AdjacencyLists.c Graph.h list.h
	$(CC) $(CCFLAGS) -c graph-AdjacencyLists.c

list.o: list.c list.h
	$(CC) $(CCFLAGS) -c list.c

queue.o: queue.c queue.h
	$(CC) $(CCFLAGS) -c queue.c

clean:
	rm -f test bfs dfs *.o
